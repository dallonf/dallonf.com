---
import { Debug } from 'astro/components';
import SectionContainer from "@components/SectionContainer.astro";

const icons = import.meta.glob("./logos/*.{svg,png}");

const skillsList = await Promise.all([
  ["Svelte", "svelte.svg"],
  ["Vue", "vue.svg"],
  ["Python", "python.svg"],
  ["PyTorch", "pytorch.png"],
  ["Unity", "unity.svg"],
  ["Godot", "godot.svg"],
  ["Tauri", "tauri.svg"],
  ["Electron", "electron.svg"],
  ["Rust", "rust.svg"],
  ["Kotlin", "kotlin.svg"],
  ["Go", "go.svg"],
  ["C#", "csharp.svg"],
  ["Lua", "lua.svg"],
].map(async ([name, iconFile]) => {
  const iconUrl = (await icons[`./logos/${iconFile}`]() as any).default;
  return {
    name,
    iconUrl,
  }
}));
---

<SectionContainer id="more-skills">
  <h2>And More...</h2>
  <p class="summary">
    I also have non-professional experience with other web frameworks,
    machine learning, game development, and more:
  </p>
  <ul class="skill-list">
    {skillsList.map(skill => {
    return (
    <li class="skill-entry">
      <img src={skill.iconUrl} alt="">
      <span class="skill-name">{skill.name}</span>
    </li>
    );
    })}
  </ul>
  <p class="cause">
    I'm also writing my own programming language!<br />
    Ask me about Cause...
  </p>
</SectionContainer>

<style>
  h2 {
    text-transform: uppercase;
    font-family: var(--accent-font);
    font-weight: bold;
    font-size: var(--font-size-fluid-1);
  }

  .summary {
    max-inline-size: var(--size-content-3);
    font-size: var(--font-size-fluid-0);
    color: var(--color-text-darkish);
  }

  .skill-list {
    margin-top: var(--size-fluid-3);
    display: flex;
    flex-flow: row wrap;
    column-gap: var(--size-fluid-5);
    row-gap: var(--size-fluid-2);
    justify-content: center;
  }

  .skill-entry {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .skill-entry>img {
    block-size: var(--size-fluid-5);
  }

  .skill-name {
    display: block;
    margin-top: var(--size-fluid-1);
    color: var(--color-text-darkish);
  }
</style>